# 1. Build
FROM python:3.9 as builder  
ENV PYTHONUNBUFFERED=1 
WORKDIR /usr/src/app/exec
RUN echo DOWNLOADING CONSUL CLI
RUN curl -o ./consul.zip  -O -J -L https://releases.hashicorp.com/consul/1.6.2/consul_1.6.2_linux_amd64.zip 
RUN unzip ./consul.zip -d .
WORKDIR /usr/src/app
COPY . .
WORKDIR /wheels
COPY ./requirements.txt ./requirements.txt
# PIP Will create an archive of our libraries so we don't need to download them again
# argument - wheel
RUN pip wheel -r ./requirements.txt 

# 2. Unit Test
FROM python:latest as unit-tests
WORKDIR /usr/src/app
COPY --from=builder /wheels /wheels
RUN     pip install -r /wheels/requirements.txt \
                      -f /wheels \
       && rm -rf /wheels \
       && rm -rf /root/.cache/pip/* 
COPY --from=builder /usr/src/app/ ./
RUN ["make", "test"]

# 3. Linter
FROM eeacms/pylint:latest as linting
WORKDIR /code
COPY --from=builder /usr/src/app/pylint.cfg /etc/pylint.cfg
COPY --from=builder /usr/src/app/*.py ./
COPY --from=builder /usr/src/app/api ./api
RUN ["/docker-entrypoint.sh", "pylint"]

# 4. Run
FROM python:3.9-alpine3.12 as serve
WORKDIR /usr/src/app
RUN apk add curl
COPY --from=builder /wheels /wheels
RUN     pip install -r /wheels/requirements.txt \
                      -f /wheels \
       && rm -rf /wheels \
       && rm -rf /root/.cache/pip/* 
COPY --from=builder /usr/src/app/*.py ./
COPY --from=builder /usr/src/app/api ./api
COPY --from=builder /usr/src/app/exec/* /usr/bin/
ENTRYPOINT ["sh", "/usr/bin/entry-point.sh"]
CMD ["python3", "run_app.py"]